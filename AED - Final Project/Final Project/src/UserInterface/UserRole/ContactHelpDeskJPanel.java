/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.UserRole;

import Business.Enterprise.Enterprise;
import Business.HelpDeskEmployee.HelpDeskEmployee;
import Business.Organization.Organization;
import Business.Organization.UserOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HelpDeskWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mugdha
 */
public class ContactHelpDeskJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ContactHelpDeskJPanel
     */
    private JPanel userProcessContainer;
    private UserOrganization organization;
    private UserAccount userAccount;
    private Enterprise enterprise;

    public ContactHelpDeskJPanel(JPanel upc, UserOrganization uo, UserAccount ua, Enterprise b) {
        initComponents();

        this.userProcessContainer = upc;
        this.organization = uo;
        this.userAccount = ua;
        this.enterprise = b;

        populateHelpDeskTable();
    }

    public void populateHelpDeskTable() {

        Organization organization1 = null;
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equals("HelpDesk Organization")) {
                organization1 = org;
                break;
            }
        }

        DefaultTableModel model = (DefaultTableModel) tblHelpDesk.getModel();

        model.setRowCount(0);

        for (UserAccount ua : organization1.getUserAccountDirectory().getUserAccountList()) {
            Object[] row = new Object[4];
            row[0] = ua.getEmployee().getId();
            row[1] = ua.getEmployee().getName();

            String status = ua.getEmployee().getStatus();
            row[2] = status == null ? "Free" : status;
            row[3] = ua;
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        btnContactHelp = new javax.swing.JButton();
        btnContactHelp1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHelpDesk = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));
        jDesktopPane1.setEnabled(false);

        btnContactHelp.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnContactHelp.setText("Contact Help!");
        btnContactHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContactHelpActionPerformed(evt);
            }
        });

        btnContactHelp1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnContactHelp1.setText("View Conversation History!");
        btnContactHelp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContactHelp1ActionPerformed(evt);
            }
        });

        tblHelpDesk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Status", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHelpDesk);

        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane2.setViewportView(txtQuestion);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Write your query below and contact help");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Select the Help Desk Employee you want to contact!");

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mugdha\\Documents\\NetBeansProjects\\Final Project\\src\\UserInterface\\Back.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(btnContactHelp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnContactHelp1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1191, Short.MAX_VALUE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(314, 314, 314)
                        .addComponent(jLabel1))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnContactHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnContactHelp1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(btnContactHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnContactHelp1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnContactHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContactHelpActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblHelpDesk.getSelectedRow();
            String question = txtQuestion.getText();

            if (txtQuestion.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Write a query first!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            UserAccount ua;

            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                ua = (UserAccount) tblHelpDesk.getValueAt(selectedRow, 3);

                Organization organization1 = null;
                for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (org.getName().equals("HelpDesk Organization")) {
                        organization1 = org;
                        break;
                    }
                }

                HelpDeskEmployee emp = (HelpDeskEmployee) ua.getEmployee();
                if (emp.getStatus().equals("Busy")) {
                    JOptionPane.showMessageDialog(this, "Help Desk Employee is busy.", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                int count =0;
                for(WorkRequest req : userAccount.getWorkQueue().getWorkRequestList()){
                 
                    if(req instanceof HelpDeskWorkRequest){
                        if(req.getStatus().equalsIgnoreCase("Processing") ||req.getStatus().equalsIgnoreCase("Answered") ){
                            count++;
                        }
                    }
                                
                }
                if(count==0){
                 WorkRequest request = new HelpDeskWorkRequest();
                Date date = Calendar.getInstance().getTime();

                request.setSender(userAccount);
                request.setReceiver(ua);
                request.setStatus("Processing");
                request.setRequestDate(date);

                ((HelpDeskWorkRequest) request).getConversation().add(question);
                ((HelpDeskWorkRequest) request).getName().add("Me: ");

                ua.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
                ua.getEmployee().setStatus("Busy");

                JOptionPane.showMessageDialog(this, "Query sucessfully sent!", "Information", JOptionPane.INFORMATION_MESSAGE);

                populateHelpDeskTable();
                
                }
                else{
                    JOptionPane.showMessageDialog(null, "You already have a conversation going on!", "Warning", JOptionPane.WARNING_MESSAGE);
                }

               

            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnContactHelpActionPerformed

    private void btnContactHelp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContactHelp1ActionPerformed
        // TODO add your handling code here:
        ViewConversationJPanel chdjp = new ViewConversationJPanel(userProcessContainer, organization, userAccount, enterprise);
        userProcessContainer.add("ViewConversationjPanel", chdjp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnContactHelp1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        UserWorkAreaJPanel uwajp = (UserWorkAreaJPanel) component;
       
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnContactHelp;
    private javax.swing.JButton btnContactHelp1;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblHelpDesk;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables
}
