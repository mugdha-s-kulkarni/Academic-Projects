/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.UserRole;

import Business.Employee.User;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CleaningOrganization;
import Business.Organization.Organization;
import Business.Organization.SnowPlowOrganization;
import Business.Organization.UserOrganization;
import Business.Sensors.Sensor;
import Business.Streets.Street;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReportCleaningWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Mugdha
 */
public class ReportCleaningJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReportCleaningJPanel
     */
    private JPanel userProcessContainer;
    private UserOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;

    public ReportCleaningJPanel(JPanel upc, UserOrganization org, UserAccount ua, Enterprise e, Network n) {
        initComponents();
        this.userProcessContainer = upc;
        this.organization = org;
        this.enterprise = e;
        this.userAccount = ua;
        this.network = n;
        
        txtEmailId.setEnabled(false);

        populateStreetCombo();
    }

    public void populateStreetCombo() {
        comboStreet.removeAllItems();
        Enterprise ent = null;;
        SnowPlowOrganization org = null;

        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (e.getEnterpriseType().getValue().equals("SnowPlow")) {
                ent = e;
                break;
            }
        }
        for (Organization o : ent.getOrganizationDirectory().getOrganizationList()) {

            if (o.getName().equalsIgnoreCase("SnowPlow Organization")) {
                org = (SnowPlowOrganization) o;
                break;
            }
        }
        for (Street street : org.getStreetDirectory().getStreetList()) {
            comboStreet.addItem(street);
        }
    }

    public void populateSensorCombo(Street street) {
        comboSensor.removeAllItems();

        for (Sensor sensor : street.getSensorDirectory().getSensorList()) {
            comboSensor.addItem(sensor);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        lblArea = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        rBtnEmailMe = new javax.swing.JRadioButton();
        lblArea1 = new javax.swing.JLabel();
        lblStreet = new javax.swing.JLabel();
        comboSensor = new javax.swing.JComboBox();
        btnSubmit = new javax.swing.JButton();
        lblHeighy = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        txtEmailId = new javax.swing.JTextField();
        lblHeighy1 = new javax.swing.JLabel();
        comboStreet = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mugdha\\Desktop\\Back.png")); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(153, 204, 255));

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));
        jDesktopPane1.setEnabled(false);

        lblArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblArea.setText("Street Area");

        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });

        rBtnEmailMe.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rBtnEmailMe.setText("Notify me by an Email");
        rBtnEmailMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBtnEmailMeActionPerformed(evt);
            }
        });

        lblArea1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblArea1.setText("Report Message");

        lblStreet.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblStreet.setText("Street");

        comboSensor.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblHeighy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblHeighy.setText("Approximate Snow Height");

        txtHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeightActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnView.setText("View Records");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        txtEmailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIdActionPerformed(evt);
            }
        });

        lblHeighy1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblHeighy1.setText("Email Address");

        comboStreet.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        comboStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStreetActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(lblArea, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(rBtnEmailMe, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblArea1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblStreet, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(comboSensor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnSubmit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblHeighy, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtHeight, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnView, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtEmailId, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblHeighy1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(comboStreet, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(372, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblArea)
                            .addComponent(lblStreet))
                        .addGap(39, 39, 39)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(comboStreet, 0, 248, Short.MAX_VALUE)
                                .addComponent(comboSensor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblHeighy)
                            .addComponent(lblArea1)
                            .addComponent(lblHeighy1)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rBtnEmailMe)
                        .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(558, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStreet)
                    .addComponent(comboStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblArea)
                    .addComponent(comboSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArea1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeighy)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(rBtnEmailMe)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHeighy1))
                .addGap(29, 29, 29)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mugdha\\Documents\\NetBeansProjects\\Final Project\\src\\UserInterface\\Back.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(293, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    private void rBtnEmailMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBtnEmailMeActionPerformed
        // TODO add your handling code here:
        txtEmailId.setEnabled(true);
       
    }//GEN-LAST:event_rBtnEmailMeActionPerformed

    private void comboStreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStreetActionPerformed
        // TODO add your handling code here:
        Street street = (Street) comboStreet.getSelectedItem();
        if (street != null) {
            populateSensorCombo(street);

        }
    }//GEN-LAST:event_comboStreetActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
      
        Street street = (Street) comboStreet.getSelectedItem();
        Sensor sensor = (Sensor) comboSensor.getSelectedItem();

        String message = txtMessage.getText();
        String emailId = txtEmailId.getText();

        int c = 0;
        int c1 = 0;
        int r = 0;
        Date date = Calendar.getInstance().getTime();

        ReportCleaningWorkRequest request = new ReportCleaningWorkRequest();
        request.setStreet(street);
        request.setSensor(sensor);
        request.setDate(date);

        int h = Integer.parseInt(txtHeight.getText());
        request.setSnowHeight(h);
        request.setSender(userAccount);
        request.setStatus("Sent");
        request.setMessage(message);

        User user = (User) request.getSender().getEmployee();
        user.setEmailId(emailId);

        Enterprise ent = null;
        CleaningOrganization org = null;
        SnowPlowOrganization org1 = null;

        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (e.getEnterpriseType().getValue().equals("SnowPlow")) {
                ent = e;
                break;
            }
        }
        for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getName().equalsIgnoreCase("Cleaning Organization")) {
                org = (CleaningOrganization) organization;
                break;
            }
        }
        try {

            if (org.getWorkQueue().getWorkRequestList().equals(null)) {
                JOptionPane.showMessageDialog(null, "Null");
                return;
            }

            for (WorkRequest wr : org.getWorkQueue().getWorkRequestList()) {

                if (((ReportCleaningWorkRequest) wr).getStreet().equals(street)
                        && ((ReportCleaningWorkRequest) wr).getSensor().equals(sensor)) {

                    c = c + 1;

                }
                if (((ReportCleaningWorkRequest) wr).getStreet().equals(street)
                        && ((ReportCleaningWorkRequest) wr).getSensor().equals(sensor)
                        && ((ReportCleaningWorkRequest) wr).getStatus().equalsIgnoreCase("Completed")) {
                    c1 = c1 + 1;
                }
                r = c - c1;
            }
            System.out.println(r);

            if (r == 0) {
                for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()) {
                    if (organization.getName().equalsIgnoreCase("SnowPlow Organization")) {
                        org1 = (SnowPlowOrganization) organization;
                        break;
                    }
                }
                if (org != null && org1 != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    org1.getWorkQueue().getWorkRequestList().add(request);

                    // System.out.println(org1.getWorkQueue().getWorkRequestList().size());
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                    JOptionPane.showMessageDialog(null, "Reported successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);
                    // System.out.println(userAccount.getWorkQueue().getWorkRequestList().size());

                }
            } else {
                JOptionPane.showMessageDialog(null, "This area is under the plowing request right now! Have patience till it gets completed", "information", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {

        }


    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHeightActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        ViewReportedRequestsJPanel rcjp = new ViewReportedRequestsJPanel(userProcessContainer, userAccount);
        userProcessContainer.add("ViewReportedRequestsJPanel", rcjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtEmailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIdActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox comboSensor;
    private javax.swing.JComboBox comboStreet;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblArea1;
    private javax.swing.JLabel lblHeighy;
    private javax.swing.JLabel lblHeighy1;
    private javax.swing.JLabel lblStreet;
    private javax.swing.JRadioButton rBtnEmailMe;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
