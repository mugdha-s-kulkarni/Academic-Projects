/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.UserRole;

import Business.Enterprise.Enterprise;
import Business.Organization.UserOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HelpDeskWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mugdha
 */
public class ViewConversationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewConversationJPanel
     */
    private JPanel userProcessContainer;
    private UserOrganization organization;
    private UserAccount userAccount;

    public ViewConversationJPanel(JPanel upc, UserOrganization uo, UserAccount ua, Enterprise b) {
        initComponents();

        this.userProcessContainer = upc;
        this.organization = uo;
        this.userAccount = ua;

        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tbleRequest.getModel();

        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            
            if(request instanceof HelpDeskWorkRequest){
            Object[] row = new Object[4];
          
            row[0] = request.getReceiver();
            row[1] = request.getRequestDate();
            row[2] = request;

            model.addRow(row);
            }
        }
    }

    public void populateConversation() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbleRequest = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtFollowUp = new javax.swing.JTextArea();
        btnFollowUp = new javax.swing.JButton();
        btnResolve = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConvo = new javax.swing.JTextArea();
        btnRefresh = new javax.swing.JButton();
        btnView = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mugdha\\Documents\\NetBeansProjects\\Final Project\\src\\UserInterface\\Back.png")); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jDesktopPane2.setBackground(new java.awt.Color(255, 255, 255));
        jDesktopPane2.setEnabled(false);

        tbleRequest.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tbleRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Reciever", "Request Date & Time", "Request Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbleRequest);

        jDesktopPane2.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                .addGap(0, 85, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        txtFollowUp.setColumns(20);
        txtFollowUp.setRows(5);
        jScrollPane3.setViewportView(txtFollowUp);

        btnFollowUp.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnFollowUp.setText("Follow up");
        btnFollowUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFollowUpActionPerformed(evt);
            }
        });

        btnResolve.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnResolve.setText("Resolve!");
        btnResolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResolveActionPerformed(evt);
            }
        });

        txtConvo.setColumns(20);
        txtConvo.setRows(5);
        jScrollPane2.setViewportView(txtConvo);

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnView.setText("View Conversation");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(345, 345, 345)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnView)
                                            .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(79, 79, 79)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnFollowUp, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnResolve, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(633, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jDesktopPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnFollowUp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnResolve, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        try {
             int selectedRow = tbleRequest.getSelectedRow();
        WorkRequest req;

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            req = (WorkRequest) tbleRequest.getValueAt(selectedRow, 2);
        }

        try {
            for (int i = 0; i < 100; i++) {

                String oldConvo;

                oldConvo = txtConvo.getText();

                if (oldConvo.equals(null)) {

                    JOptionPane.showMessageDialog(this, "Message can't be blank!", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                String s1 = ((HelpDeskWorkRequest) req).getConversation().get(i);
                String s2 = ((HelpDeskWorkRequest) req).getName().get(i);
                txtConvo.setText(oldConvo.concat("\n" + s2 + s1));

            }
        } catch (Exception e) {
            if (((HelpDeskWorkRequest) req).getConversation().isEmpty()) {
                JOptionPane.showMessageDialog(null, "You don't have any response as yet!", "Information", JOptionPane.INFORMATION_MESSAGE);
            } else {
                btnView.setEnabled(false);
            }
            
                if (!txtConvo.contains(null)) {
                    btnView.setEnabled(false);
                }

        } 
        } catch (Exception e) {
        }
      

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnFollowUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFollowUpActionPerformed
        // TODO add your handling code here:
        try {
              int selectedRow = tbleRequest.getSelectedRow();

        String s1 = txtFollowUp.getText();
        if (txtFollowUp.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Write a query first!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        WorkRequest req;

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            req = (WorkRequest) tbleRequest.getValueAt(selectedRow, 2);
        }

        if(req.getStatus().equals("Resolved")){
            JOptionPane.showMessageDialog(null, "Conversation has been resolved! Create a new HelpDesk Request.", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
                
        ((HelpDeskWorkRequest) req).getConversation().add(s1);
        ((HelpDeskWorkRequest) req).setStatus("New Query!");
        ((HelpDeskWorkRequest) req).getName().add("Me: ");
        JOptionPane.showMessageDialog(null, "Message sent successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
        populateTable();
        } catch (Exception e) {
        }
      
    }//GEN-LAST:event_btnFollowUpActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        txtConvo.setText("");
        btnView.setEnabled(true);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnResolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResolveActionPerformed
        // TODO add your handling code here:
        try {
          int selectedRow = tbleRequest.getSelectedRow();
        
         WorkRequest req;

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            req = (WorkRequest) tbleRequest.getValueAt(selectedRow, 2);
        }
        
        int selectedOption = JOptionPane.showConfirmDialog(null, "Do you want to resolve?", "Choose", JOptionPane.YES_NO_OPTION);
        if(selectedOption == JOptionPane.YES_OPTION){
            req.setStatus("Resolved");
            req.getReceiver().getEmployee().setStatus("Free");
            populateTable();   
        }
        else{
            return;
        }  
        } catch (Exception e) {
        }
        
       
    
    }//GEN-LAST:event_btnResolveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ContactHelpDeskJPanel upjp = (ContactHelpDeskJPanel) component;

        upjp.populateHelpDeskTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFollowUp;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnResolve;
    private javax.swing.JButton btnView;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbleRequest;
    private javax.swing.JTextArea txtConvo;
    private javax.swing.JTextArea txtFollowUp;
    // End of variables declaration//GEN-END:variables
}
