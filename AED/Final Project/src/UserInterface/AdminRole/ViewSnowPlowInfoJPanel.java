/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PlowTruckOrganization;
import Business.Organization.SnowPlowOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Mugdha
 */
public class ViewSnowPlowInfoJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewSnowPlowInfoJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;

    public ViewSnowPlowInfoJPanel(JPanel upc, Enterprise e) {
        initComponents();
        this.userProcessContainer = upc;
        this.enterprise = e;
        
        getBusyTrucks();
        getNumberOfReportedStreets();
        getNumberOfProscessingStreets();
        getNumberOfCompletedStreets();

    }
    
     private void getNumberOfReportedStreets(){
         try {
             Organization org = null;    
          for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof SnowPlowOrganization) {
                    org = o;
                    break;
                }
            }
         int total = org.getWorkQueue().getWorkRequestList().size();
         lblR.setText(String.valueOf(total));
         } catch (Exception e) {
         }
          
         
     }
     
     private void getNumberOfProscessingStreets(){
         try {
             int count = 0;
           Organization org = null;    
          for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof SnowPlowOrganization) {
                    org = o;
                    break;
                }
            }
         for(WorkRequest req : org.getWorkQueue().getWorkRequestList()){
             if(req.getStatus().equalsIgnoreCase("Processing")){
                 count++;
             }
         }
      
            lblP.setText(String.valueOf(count)); 
         } catch (Exception e) {
         }
        
     }
     private void getNumberOfCompletedStreets(){
         try {
              int count = 0;
                 
          Organization org = null;    
          for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof SnowPlowOrganization) {
                    org = o;
                    break;
                }
            }
         for(WorkRequest req : org.getWorkQueue().getWorkRequestList()){
             if(req.getStatus().equalsIgnoreCase("Completed")){
                 count++;
             }
         }
          
            lblC.setText(String.valueOf((count)));
         } catch (Exception e) {
         }
        
     }

    private void getBusyTrucks() {
       
        Organization org = null;
        int count = 0;
        try {
            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof PlowTruckOrganization) {
                    org = o;
                    break;
                }
            }

            for(UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {

                if (ua.getEmployee().getStatus().equalsIgnoreCase("Assigned")) {
                    count++;
                }
            }

            lblB.setText(String.valueOf(count));
            int size = org.getEmployeeDirectory().getEmployeeList().size();
            lblF.setText(String.valueOf(size - count));

           

        } catch (Exception e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblReported = new javax.swing.JLabel();
        lblProcessing = new javax.swing.JLabel();
        lblCompleted = new javax.swing.JLabel();
        lblFree = new javax.swing.JLabel();
        lblBusy = new javax.swing.JLabel();
        lblR = new javax.swing.JLabel();
        lblP = new javax.swing.JLabel();
        lblC = new javax.swing.JLabel();
        lblF = new javax.swing.JLabel();
        lblB = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblReported.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblReported.setText("Street reported to be plowed:");

        lblProcessing.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblProcessing.setText("    Street under plow processing:");

        lblCompleted.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblCompleted.setText("Street completed plowing:");

        lblFree.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblFree.setText("                    Free Plow Trucks:");

        lblBusy.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblBusy.setText("Busy Plow Trucks:");

        lblR.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        lblP.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        lblC.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        lblF.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        lblB.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        btnBack.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mugdha\\Documents\\NetBeansProjects\\Final Project\\src\\UserInterface\\Back.png")); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addContainerGap(994, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblBusy)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblProcessing, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblReported)
                        .addComponent(lblFree)))
                .addGap(137, 137, 137)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(268, 268, 268))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblR, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReported, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProcessing, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFree, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblB, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBusy, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(163, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageAnalyticsJPanel uwajp = (ManageAnalyticsJPanel) component;

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel lblB;
    private javax.swing.JLabel lblBusy;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblCompleted;
    private javax.swing.JLabel lblF;
    private javax.swing.JLabel lblFree;
    private javax.swing.JLabel lblP;
    private javax.swing.JLabel lblProcessing;
    private javax.swing.JLabel lblR;
    private javax.swing.JLabel lblReported;
    // End of variables declaration//GEN-END:variables
}
