/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.UserRole;

import Business.Organization.UserOrganization;
import Business.TravelCard.TravelCard;
import Business.Employee.User;
import Business.UserAccount.UserAccount;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.CardLayout;
import java.awt.Component;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Mugdha
 */
public class TravelCardDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TravelCardWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserOrganization organization;
    private UserAccount userAccount;
    private int cost;
    private int days;

    private String[] duration = {"1 Day", "Weekly", "Fortnight", "Monthly", "3 Months", "6 Months", "Yearly"};
    private String[] vehicle = {"Bus", "Train"};

    public TravelCardDetailsJPanel(JPanel upc, UserOrganization uo, UserAccount ua) {
        initComponents();
        this.userProcessContainer = upc;
        this.organization = uo;
        this.userAccount = ua;

        populateVehicleCombo();
        populateCombo();

        btnPrint.setEnabled(false);
    }

    public void populateVehicleCombo() {
        comboVehicle.removeAllItems();
        for (String s : vehicle) {
            comboVehicle.addItem(s);
        }
    }

    private void populateCombo() {
        comboType.removeAllItems();
        for (TravelCard.Type type : TravelCard.Type.values()) {
            comboType.addItem(String.valueOf(type));

            populateDurCombo();
        }
    }

    private void populateDurCombo() {
        comboDuration.removeAllItems();
        for (String s : duration) {
            comboDuration.addItem(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        comboDuration = new javax.swing.JComboBox<>();
        txtFileName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        comboVehicle = new javax.swing.JComboBox<>();
        lblVehivle = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblFileName = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        btnBuy = new javax.swing.JButton();
        lblCard = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btnBack = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        lblEnd = new javax.swing.JLabel();
        lblDuration = new javax.swing.JLabel();
        txtEndDate = new javax.swing.JTextField();
        lblAmount = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        lblStart = new javax.swing.JLabel();
        comboType = new javax.swing.JComboBox<>();

        jButton1.setText("jButton1");

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));
        jDesktopPane1.setEnabled(false);

        comboDuration.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtFileName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("              Book Your Travel Card ");

        comboVehicle.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lblVehivle.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblVehivle.setText("Travel Card Vehicle");

        lblFileName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFileName.setText("File Name (.pdf)");

        btnView.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnView.setText("View Amount");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnBuy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnBuy.setText("Buy it!");
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        lblCard.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblCard.setText("Travel Card Type");

        jDateChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jDateChooser1KeyReleased(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mugdha\\Documents\\NetBeansProjects\\Final Project\\src\\UserInterface\\Back.png")); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnPrint.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnPrint.setText("Print Your Ticket");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        lblEnd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblEnd.setText("End Date");

        lblDuration.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDuration.setText("Travel Card Duration");

        txtEndDate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lblAmount.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblAmount.setText("Travel Card Amount");

        txtAmount.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lblStart.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblStart.setText("Start Date");

        comboType.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jDesktopPane1.setLayer(comboDuration, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFileName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(comboVehicle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblVehivle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblFileName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnView, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnBuy, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblCard, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jDateChooser1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnBack, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnPrint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblEnd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblDuration, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtEndDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblAmount, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtAmount, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblStart, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(comboType, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(btnBack)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCard, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblVehivle, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(39, 39, 39)
                                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(comboType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboDuration, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblStart, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(39, 39, 39)
                                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtAmount, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnBuy, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtEndDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                        .addComponent(lblFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)
                                        .addComponent(txtFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 354, Short.MAX_VALUE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblVehivle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        // TODO add your handling code here:
    try {
            
       
        User user = (User) userAccount.getEmployee();
        TravelCard travelCard = user.getHistory().createAndAddTravelCard();

        travelCard.setVehicleName(String.valueOf(comboVehicle.getSelectedItem()));
        travelCard.setName(String.valueOf(comboType.getSelectedItem()));
        travelCard.setDuration((String) comboDuration.getSelectedItem());

        userAccount.getUser().setName(userAccount.getEmployee().getName());
        Date date1 = jDateChooser1.getDate();
        Date date2 = new Date();

        int date3 = date1.getDate();

        if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("1 Day")) {
            date2.setDate(date3 + 1);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("Weekly")) {
            date2.setDate(date3 + 7);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("Fortnight")) {
            date2.setDate(date3 + 15);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("Monthly")) {
            date2.setDate(date3 + 30);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("3 Months")) {
            date2.setDate(date3 + 90);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("6 Months")) {
            date2.setDate(date3 + 180);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("Yearly")) {
            date2.setDate(date3 + 365);
        }

        travelCard.setStartDate(date1);
        travelCard.setEndDate(date2);
        txtEndDate.setText(String.valueOf(date2));

        if (comboType.getSelectedItem().equals("Gold")) {
            cost = 50;
        } else if (comboType.getSelectedItem().equals("Silver")) {
            cost = 35;
        } else if (comboType.getSelectedItem().equals("Regular")) {
            cost = 20;
        }

        if (comboDuration.getSelectedItem().equals("1 Day")) {
            days = 1;
        } else if (comboDuration.getSelectedItem().equals("Weekly")) {
            days = 7;
        } else if (comboDuration.getSelectedItem().equals("Fortnight")) {
            days = 15;
        } else if (comboDuration.getSelectedItem().equals("Monthly")) {
            days = 30;
        } else if (comboDuration.getSelectedItem().equals("3 Months")) {
            days = 90;
        } else if (comboDuration.getSelectedItem().equals("6 Months")) {
            days = 180;
        } else if (comboDuration.getSelectedItem().equals("Yearly")) {
            days = 365;
        }

        txtAmount.setText(String.valueOf(days * cost));
        travelCard.setAmount(days * cost);
        btnPrint.setEnabled(true);
         } catch (Exception e) {
        }

    }//GEN-LAST:event_btnBuyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        UserProfileJPanel upjp = (UserProfileJPanel) component;

        upjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);


    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        try {
            // TODO add your handling code here:
            Document doc = new Document();
            PdfPTable pt = new PdfPTable(4);

            String s = txtFileName.getText();

            if (txtFileName.getText().equals(null)) {
                JOptionPane.showMessageDialog(null, "Enter file name!");
            }
            try {
                PdfWriter.getInstance(doc, new FileOutputStream(s));
            } catch (DocumentException ex) {
                Logger.getLogger(TravelCardDetailsJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            doc.open();
            try {

                Image image1 = null;
                try {
                    image1 = Image.getInstance("C:\\Users\\Mugdha\\Documents\\NetBeansProjects\\Final Project\\src\\tickets.png");
                } catch (BadElementException ex) {
                    Logger.getLogger(TravelCardDetailsJPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(TravelCardDetailsJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }

                doc.add(image1);
                doc.add(new Paragraph("Your Tavel Card"));
                doc.add(new Paragraph("_______________________________________________________________________"));

                doc.add(new Paragraph("User Name: " + userAccount.getUser().getName().toString()));
                doc.add(new Paragraph("_______________________________________________________________________"));

                String s1 = (String) comboType.getSelectedItem();
                doc.add(new Paragraph("Card Type: " + s1));
                String s2 = (String) comboDuration.getSelectedItem();
                doc.add(new Paragraph("Card Type: " + s2));

                String s3 = String.valueOf(txtAmount.getText());
                doc.add(new Paragraph("Cost: " + s3));

                doc.add(new Paragraph("_______________________________________________________________________"));

                doc.add(new Paragraph("Travel Card Date"));
                doc.add(new Paragraph("From: " + jDateChooser1.getDate() + " To: " + txtEndDate.getText()));
                doc.add(new Paragraph("_______________________________________________________________________"));

                pt.addCell("" + comboType.getSelectedItem());
                doc.add(pt);

            } catch (DocumentException ex) {
                Logger.getLogger(TravelCardDetailsJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

            doc.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TravelCardDetailsJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        try {
        
        Date date1 = jDateChooser1.getDate();
        Date date2 = new Date();

        int date3 = date1.getDate();

        if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("1 Day")) {
            date2.setDate(date3 + 1);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("Weekly")) {
            date2.setDate(date3 + 7);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("Fortnight")) {
            date2.setDate(date3 + 15);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("Monthly")) {
            date2.setDate(date3 + 30);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("3 Months")) {
            date2.setDate(date3 + 90);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("6 Months")) {
            date2.setDate(date3 + 180);
        } else if (String.valueOf(comboDuration.getSelectedItem()).equalsIgnoreCase("Yearly")) {
            date2.setDate(date3 + 365);
        }

        txtEndDate.setText(String.valueOf(date2));

        if (comboType.getSelectedItem().equals("Gold")) {
            cost = 50;
        } else if (comboType.getSelectedItem().equals("Silver")) {
            cost = 35;
        } else if (comboType.getSelectedItem().equals("Regular")) {
            cost = 20;
        }

        if (comboDuration.getSelectedItem().equals("1 Day")) {
            days = 1;
        } else if (comboDuration.getSelectedItem().equals("Weekly")) {
            days = 7;
        } else if (comboDuration.getSelectedItem().equals("Fortnight")) {
            days = 15;
        } else if (comboDuration.getSelectedItem().equals("Monthly")) {
            days = 30;
        } else if (comboDuration.getSelectedItem().equals("3 Months")) {
            days = 90;
        } else if (comboDuration.getSelectedItem().equals("6 Months")) {
            days = 180;
        } else if (comboDuration.getSelectedItem().equals("Yearly")) {
            days = 365;
        }

        txtAmount.setText(String.valueOf(days * cost));
            
        } catch (Exception e) {
        }


    }//GEN-LAST:event_btnViewActionPerformed

    private void jDateChooser1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser1KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jDateChooser1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> comboDuration;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JComboBox<String> comboVehicle;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblCard;
    private javax.swing.JLabel lblDuration;
    private javax.swing.JLabel lblEnd;
    private javax.swing.JLabel lblFileName;
    private javax.swing.JLabel lblStart;
    private javax.swing.JLabel lblVehivle;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtFileName;
    // End of variables declaration//GEN-END:variables
}
